// API.proto: describes the RPC API protocol
//
// Author: J. Lowell Wofford <lowell@lanl.gov>
//
// This software is open source software available under the BSD-3 license.
// Copyright (c) 2018-2021, Triad National Security, LLC
// See LICENSE file for details.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: ModuleAPI.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ServiceControl_Command int32

const (
	ServiceControl_STOP   ServiceControl_Command = 0
	ServiceControl_UPDATE ServiceControl_Command = 1
	ServiceControl_INIT   ServiceControl_Command = 2 // special control to send our node info one time
)

// Enum value maps for ServiceControl_Command.
var (
	ServiceControl_Command_name = map[int32]string{
		0: "STOP",
		1: "UPDATE",
		2: "INIT",
	}
	ServiceControl_Command_value = map[string]int32{
		"STOP":   0,
		"UPDATE": 1,
		"INIT":   2,
	}
)

func (x ServiceControl_Command) Enum() *ServiceControl_Command {
	p := new(ServiceControl_Command)
	*p = x
	return p
}

func (x ServiceControl_Command) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceControl_Command) Descriptor() protoreflect.EnumDescriptor {
	return file_ModuleAPI_proto_enumTypes[0].Descriptor()
}

func (ServiceControl_Command) Type() protoreflect.EnumType {
	return &file_ModuleAPI_proto_enumTypes[0]
}

func (x ServiceControl_Command) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceControl_Command.Descriptor instead.
func (ServiceControl_Command) EnumDescriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{3, 0}
}

type MutationControl_Type int32

const (
	MutationControl_MUTATE    MutationControl_Type = 0
	MutationControl_INTERRUPT MutationControl_Type = 1
)

// Enum value maps for MutationControl_Type.
var (
	MutationControl_Type_name = map[int32]string{
		0: "MUTATE",
		1: "INTERRUPT",
	}
	MutationControl_Type_value = map[string]int32{
		"MUTATE":    0,
		"INTERRUPT": 1,
	}
)

func (x MutationControl_Type) Enum() *MutationControl_Type {
	p := new(MutationControl_Type)
	*p = x
	return p
}

func (x MutationControl_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MutationControl_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ModuleAPI_proto_enumTypes[1].Descriptor()
}

func (MutationControl_Type) Type() protoreflect.EnumType {
	return &file_ModuleAPI_proto_enumTypes[1]
}

func (x MutationControl_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MutationControl_Type.Descriptor instead.
func (MutationControl_Type) EnumDescriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{4, 0}
}

type StateChangeControl_Type int32

const (
	StateChangeControl_CREATE     StateChangeControl_Type = 0
	StateChangeControl_READ       StateChangeControl_Type = 1 //unused
	StateChangeControl_UPDATE     StateChangeControl_Type = 2
	StateChangeControl_DELETE     StateChangeControl_Type = 3
	StateChangeControl_CFG_READ   StateChangeControl_Type = 4 //unused
	StateChangeControl_CFG_UPDATE StateChangeControl_Type = 5
)

// Enum value maps for StateChangeControl_Type.
var (
	StateChangeControl_Type_name = map[int32]string{
		0: "CREATE",
		1: "READ",
		2: "UPDATE",
		3: "DELETE",
		4: "CFG_READ",
		5: "CFG_UPDATE",
	}
	StateChangeControl_Type_value = map[string]int32{
		"CREATE":     0,
		"READ":       1,
		"UPDATE":     2,
		"DELETE":     3,
		"CFG_READ":   4,
		"CFG_UPDATE": 5,
	}
)

func (x StateChangeControl_Type) Enum() *StateChangeControl_Type {
	p := new(StateChangeControl_Type)
	*p = x
	return p
}

func (x StateChangeControl_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StateChangeControl_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ModuleAPI_proto_enumTypes[2].Descriptor()
}

func (StateChangeControl_Type) Type() protoreflect.EnumType {
	return &file_ModuleAPI_proto_enumTypes[2]
}

func (x StateChangeControl_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StateChangeControl_Type.Descriptor instead.
func (StateChangeControl_Type) EnumDescriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{5, 0}
}

type EventControl_Type int32

const (
	EventControl_StateChange EventControl_Type = 0
	EventControl_Mutation    EventControl_Type = 1
	EventControl_Discovery   EventControl_Type = 2
)

// Enum value maps for EventControl_Type.
var (
	EventControl_Type_name = map[int32]string{
		0: "StateChange",
		1: "Mutation",
		2: "Discovery",
	}
	EventControl_Type_value = map[string]int32{
		"StateChange": 0,
		"Mutation":    1,
		"Discovery":   2,
	}
)

func (x EventControl_Type) Enum() *EventControl_Type {
	p := new(EventControl_Type)
	*p = x
	return p
}

func (x EventControl_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventControl_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_ModuleAPI_proto_enumTypes[3].Descriptor()
}

func (EventControl_Type) Type() protoreflect.EnumType {
	return &file_ModuleAPI_proto_enumTypes[3]
}

func (x EventControl_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventControl_Type.Descriptor instead.
func (EventControl_Type) EnumDescriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{6, 0}
}

type Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	// Types that are assignable to Payload:
	//	*Query_Node
	//	*Query_Text
	//	*Query_Bool
	//	*Query_MutationNodeList
	//	*Query_MutationEdgeList
	//	*Query_MutationPath
	Payload isQuery_Payload `protobuf_oneof:"payload"`
}

func (x *Query) Reset() {
	*x = Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Query) ProtoMessage() {}

func (x *Query) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Query.ProtoReflect.Descriptor instead.
func (*Query) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{0}
}

func (x *Query) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (m *Query) GetPayload() isQuery_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Query) GetNode() *Node {
	if x, ok := x.GetPayload().(*Query_Node); ok {
		return x.Node
	}
	return nil
}

func (x *Query) GetText() string {
	if x, ok := x.GetPayload().(*Query_Text); ok {
		return x.Text
	}
	return ""
}

func (x *Query) GetBool() bool {
	if x, ok := x.GetPayload().(*Query_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *Query) GetMutationNodeList() *MutationNodeList {
	if x, ok := x.GetPayload().(*Query_MutationNodeList); ok {
		return x.MutationNodeList
	}
	return nil
}

func (x *Query) GetMutationEdgeList() *MutationEdgeList {
	if x, ok := x.GetPayload().(*Query_MutationEdgeList); ok {
		return x.MutationEdgeList
	}
	return nil
}

func (x *Query) GetMutationPath() *MutationPath {
	if x, ok := x.GetPayload().(*Query_MutationPath); ok {
		return x.MutationPath
	}
	return nil
}

type isQuery_Payload interface {
	isQuery_Payload()
}

type Query_Node struct {
	Node *Node `protobuf:"bytes,2,opt,name=node,proto3,oneof"`
}

type Query_Text struct {
	Text string `protobuf:"bytes,3,opt,name=text,proto3,oneof"`
}

type Query_Bool struct {
	Bool bool `protobuf:"varint,4,opt,name=bool,proto3,oneof"`
}

type Query_MutationNodeList struct {
	MutationNodeList *MutationNodeList `protobuf:"bytes,5,opt,name=mutationNodeList,proto3,oneof"`
}

type Query_MutationEdgeList struct {
	MutationEdgeList *MutationEdgeList `protobuf:"bytes,6,opt,name=mutationEdgeList,proto3,oneof"`
}

type Query_MutationPath struct {
	MutationPath *MutationPath `protobuf:"bytes,7,opt,name=mutationPath,proto3,oneof"`
}

func (*Query_Node) isQuery_Payload() {}

func (*Query_Text) isQuery_Payload() {}

func (*Query_Bool) isQuery_Payload() {}

func (*Query_MutationNodeList) isQuery_Payload() {}

func (*Query_MutationEdgeList) isQuery_Payload() {}

func (*Query_MutationPath) isQuery_Payload() {}

type QueryMulti struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Queries []*Query `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
}

func (x *QueryMulti) Reset() {
	*x = QueryMulti{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryMulti) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMulti) ProtoMessage() {}

func (x *QueryMulti) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMulti.ProtoReflect.Descriptor instead.
func (*QueryMulti) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{1}
}

func (x *QueryMulti) GetQueries() []*Query {
	if x != nil {
		return x.Queries
	}
	return nil
}

type ServiceInitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Module string `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
}

func (x *ServiceInitRequest) Reset() {
	*x = ServiceInitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInitRequest) ProtoMessage() {}

func (x *ServiceInitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInitRequest.ProtoReflect.Descriptor instead.
func (*ServiceInitRequest) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{2}
}

func (x *ServiceInitRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServiceInitRequest) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

type ServiceControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command ServiceControl_Command `protobuf:"varint,1,opt,name=command,proto3,enum=proto.ServiceControl_Command" json:"command,omitempty"`
	Config  *any.Any               `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ServiceControl) Reset() {
	*x = ServiceControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceControl) ProtoMessage() {}

func (x *ServiceControl) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceControl.ProtoReflect.Descriptor instead.
func (*ServiceControl) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceControl) GetCommand() ServiceControl_Command {
	if x != nil {
		return x.Command
	}
	return ServiceControl_STOP
}

func (x *ServiceControl) GetConfig() *any.Any {
	if x != nil {
		return x.Config
	}
	return nil
}

type MutationControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module string               `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Id     string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Type   MutationControl_Type `protobuf:"varint,3,opt,name=type,proto3,enum=proto.MutationControl_Type" json:"type,omitempty"`
	Cfg    *Node                `protobuf:"bytes,4,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Dsc    *Node                `protobuf:"bytes,5,opt,name=dsc,proto3" json:"dsc,omitempty"`
}

func (x *MutationControl) Reset() {
	*x = MutationControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationControl) ProtoMessage() {}

func (x *MutationControl) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationControl.ProtoReflect.Descriptor instead.
func (*MutationControl) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{4}
}

func (x *MutationControl) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *MutationControl) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MutationControl) GetType() MutationControl_Type {
	if x != nil {
		return x.Type
	}
	return MutationControl_MUTATE
}

func (x *MutationControl) GetCfg() *Node {
	if x != nil {
		return x.Cfg
	}
	return nil
}

func (x *MutationControl) GetDsc() *Node {
	if x != nil {
		return x.Dsc
	}
	return nil
}

type StateChangeControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  StateChangeControl_Type `protobuf:"varint,1,opt,name=type,proto3,enum=proto.StateChangeControl_Type" json:"type,omitempty"`
	Url   string                  `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Value string                  `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StateChangeControl) Reset() {
	*x = StateChangeControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateChangeControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateChangeControl) ProtoMessage() {}

func (x *StateChangeControl) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateChangeControl.ProtoReflect.Descriptor instead.
func (*StateChangeControl) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{5}
}

func (x *StateChangeControl) GetType() StateChangeControl_Type {
	if x != nil {
		return x.Type
	}
	return StateChangeControl_CREATE
}

func (x *StateChangeControl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *StateChangeControl) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type EventControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type EventControl_Type `protobuf:"varint,1,opt,name=type,proto3,enum=proto.EventControl_Type" json:"type,omitempty"`
	// Types that are assignable to Event:
	//	*EventControl_StateChangeControl
	//	*EventControl_MutationControl
	//	*EventControl_DiscoveryEvent
	Event isEventControl_Event `protobuf_oneof:"event"`
}

func (x *EventControl) Reset() {
	*x = EventControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventControl) ProtoMessage() {}

func (x *EventControl) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventControl.ProtoReflect.Descriptor instead.
func (*EventControl) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{6}
}

func (x *EventControl) GetType() EventControl_Type {
	if x != nil {
		return x.Type
	}
	return EventControl_StateChange
}

func (m *EventControl) GetEvent() isEventControl_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *EventControl) GetStateChangeControl() *StateChangeControl {
	if x, ok := x.GetEvent().(*EventControl_StateChangeControl); ok {
		return x.StateChangeControl
	}
	return nil
}

func (x *EventControl) GetMutationControl() *MutationControl {
	if x, ok := x.GetEvent().(*EventControl_MutationControl); ok {
		return x.MutationControl
	}
	return nil
}

func (x *EventControl) GetDiscoveryEvent() *DiscoveryEvent {
	if x, ok := x.GetEvent().(*EventControl_DiscoveryEvent); ok {
		return x.DiscoveryEvent
	}
	return nil
}

type isEventControl_Event interface {
	isEventControl_Event()
}

type EventControl_StateChangeControl struct {
	StateChangeControl *StateChangeControl `protobuf:"bytes,2,opt,name=stateChangeControl,proto3,oneof"`
}

type EventControl_MutationControl struct {
	MutationControl *MutationControl `protobuf:"bytes,3,opt,name=mutationControl,proto3,oneof"`
}

type EventControl_DiscoveryEvent struct {
	DiscoveryEvent *DiscoveryEvent `protobuf:"bytes,4,opt,name=discoveryEvent,proto3,oneof"`
}

func (*EventControl_StateChangeControl) isEventControl_Event() {}

func (*EventControl_MutationControl) isEventControl_Event() {}

func (*EventControl_DiscoveryEvent) isEventControl_Event() {}

type DiscoveryEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ValueId string `protobuf:"bytes,3,opt,name=value_id,json=valueId,proto3" json:"value_id,omitempty"`
}

func (x *DiscoveryEvent) Reset() {
	*x = DiscoveryEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryEvent) ProtoMessage() {}

func (x *DiscoveryEvent) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryEvent.ProtoReflect.Descriptor instead.
func (*DiscoveryEvent) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{7}
}

func (x *DiscoveryEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DiscoveryEvent) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DiscoveryEvent) GetValueId() string {
	if x != nil {
		return x.ValueId
	}
	return ""
}

type MutationNodeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MutationNodeList []*MutationNode `protobuf:"bytes,1,rep,name=MutationNodeList,proto3" json:"MutationNodeList,omitempty"`
}

func (x *MutationNodeList) Reset() {
	*x = MutationNodeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationNodeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationNodeList) ProtoMessage() {}

func (x *MutationNodeList) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationNodeList.ProtoReflect.Descriptor instead.
func (*MutationNodeList) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{8}
}

func (x *MutationNodeList) GetMutationNodeList() []*MutationNode {
	if x != nil {
		return x.MutationNodeList
	}
	return nil
}

type MutationEdgeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MutationEdgeList []*MutationEdge `protobuf:"bytes,1,rep,name=MutationEdgeList,proto3" json:"MutationEdgeList,omitempty"`
}

func (x *MutationEdgeList) Reset() {
	*x = MutationEdgeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationEdgeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationEdgeList) ProtoMessage() {}

func (x *MutationEdgeList) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationEdgeList.ProtoReflect.Descriptor instead.
func (*MutationEdgeList) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{9}
}

func (x *MutationEdgeList) GetMutationEdgeList() []*MutationEdge {
	if x != nil {
		return x.MutationEdgeList
	}
	return nil
}

type MutationPath struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cur   int64           `protobuf:"varint,1,opt,name=cur,proto3" json:"cur,omitempty"`
	Cmplt bool            `protobuf:"varint,2,opt,name=cmplt,proto3" json:"cmplt,omitempty"`
	Chain []*MutationEdge `protobuf:"bytes,3,rep,name=chain,proto3" json:"chain,omitempty"`
}

func (x *MutationPath) Reset() {
	*x = MutationPath{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationPath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationPath) ProtoMessage() {}

func (x *MutationPath) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationPath.ProtoReflect.Descriptor instead.
func (*MutationPath) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{10}
}

func (x *MutationPath) GetCur() int64 {
	if x != nil {
		return x.Cur
	}
	return 0
}

func (x *MutationPath) GetCmplt() bool {
	if x != nil {
		return x.Cmplt
	}
	return false
}

func (x *MutationPath) GetChain() []*MutationEdge {
	if x != nil {
		return x.Chain
	}
	return nil
}

type MutationNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string     `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	Id    string     `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Color *NodeColor `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *MutationNode) Reset() {
	*x = MutationNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationNode) ProtoMessage() {}

func (x *MutationNode) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationNode.ProtoReflect.Descriptor instead.
func (*MutationNode) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{11}
}

func (x *MutationNode) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MutationNode) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MutationNode) GetColor() *NodeColor {
	if x != nil {
		return x.Color
	}
	return nil
}

type MutationEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  string     `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To    string     `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Id    string     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Color *EdgeColor `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *MutationEdge) Reset() {
	*x = MutationEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationEdge) ProtoMessage() {}

func (x *MutationEdge) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationEdge.ProtoReflect.Descriptor instead.
func (*MutationEdge) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{12}
}

func (x *MutationEdge) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *MutationEdge) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *MutationEdge) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MutationEdge) GetColor() *EdgeColor {
	if x != nil {
		return x.Color
	}
	return nil
}

// This is only nessessary for the json mutation edge color to output in the correct format for the dashboard
type EdgeColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color     string `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Highlight string `protobuf:"bytes,2,opt,name=highlight,proto3" json:"highlight,omitempty"`
	Inherit   bool   `protobuf:"varint,3,opt,name=inherit,proto3" json:"inherit,omitempty"`
}

func (x *EdgeColor) Reset() {
	*x = EdgeColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EdgeColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EdgeColor) ProtoMessage() {}

func (x *EdgeColor) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EdgeColor.ProtoReflect.Descriptor instead.
func (*EdgeColor) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{13}
}

func (x *EdgeColor) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *EdgeColor) GetHighlight() string {
	if x != nil {
		return x.Highlight
	}
	return ""
}

func (x *EdgeColor) GetInherit() bool {
	if x != nil {
		return x.Inherit
	}
	return false
}

// This is only nessessary for the json mutation node color to output in the correct format for the dashboard
type NodeColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Border     string `protobuf:"bytes,1,opt,name=border,proto3" json:"border,omitempty"`
	Background string `protobuf:"bytes,2,opt,name=background,proto3" json:"background,omitempty"`
}

func (x *NodeColor) Reset() {
	*x = NodeColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeColor) ProtoMessage() {}

func (x *NodeColor) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeColor.ProtoReflect.Descriptor instead.
func (*NodeColor) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{14}
}

func (x *NodeColor) GetBorder() string {
	if x != nil {
		return x.Border
	}
	return ""
}

func (x *NodeColor) GetBackground() string {
	if x != nil {
		return x.Background
	}
	return ""
}

type LogMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin string `protobuf:"bytes,1,opt,name=origin,proto3" json:"origin,omitempty"`
	Level  uint32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	Msg    string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *LogMessage) Reset() {
	*x = LogMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ModuleAPI_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogMessage) ProtoMessage() {}

func (x *LogMessage) ProtoReflect() protoreflect.Message {
	mi := &file_ModuleAPI_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogMessage.ProtoReflect.Descriptor instead.
func (*LogMessage) Descriptor() ([]byte, []int) {
	return file_ModuleAPI_proto_rawDescGZIP(), []int{15}
}

func (x *LogMessage) GetOrigin() string {
	if x != nil {
		return x.Origin
	}
	return ""
}

func (x *LogMessage) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *LogMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_ModuleAPI_proto protoreflect.FileDescriptor

var file_ModuleAPI_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x02, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x21, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x45, 0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x75,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45,
	0x0a, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x10, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x48, 0x00, 0x52, 0x0c, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x34, 0x0a, 0x0a, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x26, 0x0a, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x3c, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22,
	0xa2, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e,
	0x79, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x29, 0x0a, 0x07, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x00, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x4e,
	0x49, 0x54, 0x10, 0x02, 0x22, 0xcb, 0x01, 0x0a, 0x0f, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x03, 0x63, 0x66, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x63, 0x66, 0x67,
	0x12, 0x1d, 0x0a, 0x03, 0x64, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x64, 0x73, 0x63, 0x22,
	0x21, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x55, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x52, 0x55, 0x50, 0x54,
	0x10, 0x01, 0x22, 0xc4, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x52, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x45, 0x41,
	0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43,
	0x46, 0x47, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x46, 0x47,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x22, 0xcd, 0x02, 0x0a, 0x0c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48,
	0x00, 0x52, 0x12, 0x73, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x42, 0x0a, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x3f, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x34, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x01, 0x12, 0x0d, 0x0a, 0x09, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x10, 0x02,
	0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x4d, 0x0a, 0x0e, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a,
	0x08, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x10, 0x4d, 0x75, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x10,
	0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x10, 0x4d, 0x75, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x53, 0x0a,
	0x10, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3f, 0x0a, 0x10, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65,
	0x52, 0x10, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x22, 0x61, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x75, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x63, 0x75, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6d, 0x70, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x6d, 0x70, 0x6c, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x22, 0x5c, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45,
	0x64, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22,
	0x59, 0x0a, 0x09, 0x45, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x69, 0x6e, 0x68, 0x65, 0x72, 0x69, 0x74, 0x22, 0x43, 0x0a, 0x09, 0x4e, 0x6f,
	0x64, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x22,
	0x4c, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xeb, 0x09,
	0x0a, 0x09, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x41, 0x50, 0x49, 0x12, 0x2b, 0x0a, 0x0b, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x29, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64,
	0x44, 0x73, 0x63, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x2e,
	0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x73, 0x63,
	0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x2b,
	0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x0c, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0f, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x44, 0x73, 0x63, 0x12, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x0c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x16,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x64, 0x67, 0x65, 0x73, 0x12, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4e, 0x6f, 0x64,
	0x65, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22,
	0x00, 0x12, 0x33, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x68, 0x61, 0x77, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x0c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x45, 0x0a, 0x0c, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x69, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x09, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x0d, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x12, 0x3b,
	0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x67, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x11, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x28, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ModuleAPI_proto_rawDescOnce sync.Once
	file_ModuleAPI_proto_rawDescData = file_ModuleAPI_proto_rawDesc
)

func file_ModuleAPI_proto_rawDescGZIP() []byte {
	file_ModuleAPI_proto_rawDescOnce.Do(func() {
		file_ModuleAPI_proto_rawDescData = protoimpl.X.CompressGZIP(file_ModuleAPI_proto_rawDescData)
	})
	return file_ModuleAPI_proto_rawDescData
}

var file_ModuleAPI_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_ModuleAPI_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_ModuleAPI_proto_goTypes = []interface{}{
	(ServiceControl_Command)(0),  // 0: proto.ServiceControl.Command
	(MutationControl_Type)(0),    // 1: proto.MutationControl.Type
	(StateChangeControl_Type)(0), // 2: proto.StateChangeControl.Type
	(EventControl_Type)(0),       // 3: proto.EventControl.Type
	(*Query)(nil),                // 4: proto.Query
	(*QueryMulti)(nil),           // 5: proto.QueryMulti
	(*ServiceInitRequest)(nil),   // 6: proto.ServiceInitRequest
	(*ServiceControl)(nil),       // 7: proto.ServiceControl
	(*MutationControl)(nil),      // 8: proto.MutationControl
	(*StateChangeControl)(nil),   // 9: proto.StateChangeControl
	(*EventControl)(nil),         // 10: proto.EventControl
	(*DiscoveryEvent)(nil),       // 11: proto.DiscoveryEvent
	(*MutationNodeList)(nil),     // 12: proto.MutationNodeList
	(*MutationEdgeList)(nil),     // 13: proto.MutationEdgeList
	(*MutationPath)(nil),         // 14: proto.MutationPath
	(*MutationNode)(nil),         // 15: proto.MutationNode
	(*MutationEdge)(nil),         // 16: proto.MutationEdge
	(*EdgeColor)(nil),            // 17: proto.EdgeColor
	(*NodeColor)(nil),            // 18: proto.NodeColor
	(*LogMessage)(nil),           // 19: proto.LogMessage
	(*Node)(nil),                 // 20: proto.Node
	(*any.Any)(nil),              // 21: google.protobuf.Any
	(*empty.Empty)(nil),          // 22: google.protobuf.Empty
}
var file_ModuleAPI_proto_depIdxs = []int32{
	20, // 0: proto.Query.node:type_name -> proto.Node
	12, // 1: proto.Query.mutationNodeList:type_name -> proto.MutationNodeList
	13, // 2: proto.Query.mutationEdgeList:type_name -> proto.MutationEdgeList
	14, // 3: proto.Query.mutationPath:type_name -> proto.MutationPath
	4,  // 4: proto.QueryMulti.queries:type_name -> proto.Query
	0,  // 5: proto.ServiceControl.command:type_name -> proto.ServiceControl.Command
	21, // 6: proto.ServiceControl.config:type_name -> google.protobuf.Any
	1,  // 7: proto.MutationControl.type:type_name -> proto.MutationControl.Type
	20, // 8: proto.MutationControl.cfg:type_name -> proto.Node
	20, // 9: proto.MutationControl.dsc:type_name -> proto.Node
	2,  // 10: proto.StateChangeControl.type:type_name -> proto.StateChangeControl.Type
	3,  // 11: proto.EventControl.type:type_name -> proto.EventControl.Type
	9,  // 12: proto.EventControl.stateChangeControl:type_name -> proto.StateChangeControl
	8,  // 13: proto.EventControl.mutationControl:type_name -> proto.MutationControl
	11, // 14: proto.EventControl.discoveryEvent:type_name -> proto.DiscoveryEvent
	15, // 15: proto.MutationNodeList.MutationNodeList:type_name -> proto.MutationNode
	16, // 16: proto.MutationEdgeList.MutationEdgeList:type_name -> proto.MutationEdge
	16, // 17: proto.MutationPath.chain:type_name -> proto.MutationEdge
	18, // 18: proto.MutationNode.color:type_name -> proto.NodeColor
	17, // 19: proto.MutationEdge.color:type_name -> proto.EdgeColor
	4,  // 20: proto.ModuleAPI.QueryCreate:input_type -> proto.Query
	4,  // 21: proto.ModuleAPI.QueryRead:input_type -> proto.Query
	4,  // 22: proto.ModuleAPI.QueryReadDsc:input_type -> proto.Query
	4,  // 23: proto.ModuleAPI.QueryUpdate:input_type -> proto.Query
	4,  // 24: proto.ModuleAPI.QueryUpdateDsc:input_type -> proto.Query
	4,  // 25: proto.ModuleAPI.QueryDelete:input_type -> proto.Query
	22, // 26: proto.ModuleAPI.QueryReadAll:input_type -> google.protobuf.Empty
	22, // 27: proto.ModuleAPI.QueryReadAllDsc:input_type -> google.protobuf.Empty
	22, // 28: proto.ModuleAPI.QueryMutationNodes:input_type -> google.protobuf.Empty
	22, // 29: proto.ModuleAPI.QueryMutationEdges:input_type -> google.protobuf.Empty
	4,  // 30: proto.ModuleAPI.QueryNodeMutationNodes:input_type -> proto.Query
	4,  // 31: proto.ModuleAPI.QueryNodeMutationEdges:input_type -> proto.Query
	4,  // 32: proto.ModuleAPI.QueryNodeMutationPath:input_type -> proto.Query
	22, // 33: proto.ModuleAPI.QueryDeleteAll:input_type -> google.protobuf.Empty
	22, // 34: proto.ModuleAPI.QueryFreeze:input_type -> google.protobuf.Empty
	22, // 35: proto.ModuleAPI.QueryThaw:input_type -> google.protobuf.Empty
	22, // 36: proto.ModuleAPI.QueryFrozen:input_type -> google.protobuf.Empty
	6,  // 37: proto.ModuleAPI.ServiceInit:input_type -> proto.ServiceInitRequest
	6,  // 38: proto.ModuleAPI.MutationInit:input_type -> proto.ServiceInitRequest
	6,  // 39: proto.ModuleAPI.EventInit:input_type -> proto.ServiceInitRequest
	11, // 40: proto.ModuleAPI.DiscoveryInit:input_type -> proto.DiscoveryEvent
	19, // 41: proto.ModuleAPI.LoggerInit:input_type -> proto.LogMessage
	4,  // 42: proto.ModuleAPI.QueryCreate:output_type -> proto.Query
	4,  // 43: proto.ModuleAPI.QueryRead:output_type -> proto.Query
	4,  // 44: proto.ModuleAPI.QueryReadDsc:output_type -> proto.Query
	4,  // 45: proto.ModuleAPI.QueryUpdate:output_type -> proto.Query
	4,  // 46: proto.ModuleAPI.QueryUpdateDsc:output_type -> proto.Query
	4,  // 47: proto.ModuleAPI.QueryDelete:output_type -> proto.Query
	5,  // 48: proto.ModuleAPI.QueryReadAll:output_type -> proto.QueryMulti
	5,  // 49: proto.ModuleAPI.QueryReadAllDsc:output_type -> proto.QueryMulti
	4,  // 50: proto.ModuleAPI.QueryMutationNodes:output_type -> proto.Query
	4,  // 51: proto.ModuleAPI.QueryMutationEdges:output_type -> proto.Query
	4,  // 52: proto.ModuleAPI.QueryNodeMutationNodes:output_type -> proto.Query
	4,  // 53: proto.ModuleAPI.QueryNodeMutationEdges:output_type -> proto.Query
	4,  // 54: proto.ModuleAPI.QueryNodeMutationPath:output_type -> proto.Query
	5,  // 55: proto.ModuleAPI.QueryDeleteAll:output_type -> proto.QueryMulti
	4,  // 56: proto.ModuleAPI.QueryFreeze:output_type -> proto.Query
	4,  // 57: proto.ModuleAPI.QueryThaw:output_type -> proto.Query
	4,  // 58: proto.ModuleAPI.QueryFrozen:output_type -> proto.Query
	7,  // 59: proto.ModuleAPI.ServiceInit:output_type -> proto.ServiceControl
	8,  // 60: proto.ModuleAPI.MutationInit:output_type -> proto.MutationControl
	10, // 61: proto.ModuleAPI.EventInit:output_type -> proto.EventControl
	22, // 62: proto.ModuleAPI.DiscoveryInit:output_type -> google.protobuf.Empty
	22, // 63: proto.ModuleAPI.LoggerInit:output_type -> google.protobuf.Empty
	42, // [42:64] is the sub-list for method output_type
	20, // [20:42] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_ModuleAPI_proto_init() }
func file_ModuleAPI_proto_init() {
	if File_ModuleAPI_proto != nil {
		return
	}
	file_Node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ModuleAPI_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryMulti); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateChangeControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationNodeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationEdgeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationPath); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EdgeColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ModuleAPI_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ModuleAPI_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Query_Node)(nil),
		(*Query_Text)(nil),
		(*Query_Bool)(nil),
		(*Query_MutationNodeList)(nil),
		(*Query_MutationEdgeList)(nil),
		(*Query_MutationPath)(nil),
	}
	file_ModuleAPI_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*EventControl_StateChangeControl)(nil),
		(*EventControl_MutationControl)(nil),
		(*EventControl_DiscoveryEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ModuleAPI_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ModuleAPI_proto_goTypes,
		DependencyIndexes: file_ModuleAPI_proto_depIdxs,
		EnumInfos:         file_ModuleAPI_proto_enumTypes,
		MessageInfos:      file_ModuleAPI_proto_msgTypes,
	}.Build()
	File_ModuleAPI_proto = out.File
	file_ModuleAPI_proto_rawDesc = nil
	file_ModuleAPI_proto_goTypes = nil
	file_ModuleAPI_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ModuleAPIClient is the client API for ModuleAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ModuleAPIClient interface {
	// Query language
	// TODO: create API for bulk CRUD operations
	QueryCreate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryRead(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryReadDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryUpdate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryUpdateDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryDelete(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryReadAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error)
	QueryReadAllDsc(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error)
	QueryMutationNodes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	QueryMutationEdges(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	QueryNodeMutationNodes(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryNodeMutationEdges(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryNodeMutationPath(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error)
	QueryDeleteAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error)
	QueryFreeze(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	QueryThaw(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	QueryFrozen(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error)
	// Service management
	ServiceInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (ModuleAPI_ServiceInitClient, error)
	// Mutation/Discover management
	MutationInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (ModuleAPI_MutationInitClient, error)
	// Event management
	EventInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (ModuleAPI_EventInitClient, error)
	// Discovery management
	DiscoveryInit(ctx context.Context, opts ...grpc.CallOption) (ModuleAPI_DiscoveryInitClient, error)
	// Logging
	LoggerInit(ctx context.Context, opts ...grpc.CallOption) (ModuleAPI_LoggerInitClient, error)
}

type moduleAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewModuleAPIClient(cc grpc.ClientConnInterface) ModuleAPIClient {
	return &moduleAPIClient{cc}
}

func (c *moduleAPIClient) QueryCreate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryRead(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryRead", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryReadDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryReadDsc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryUpdate(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryUpdateDsc(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryUpdateDsc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryDelete(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryDelete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryReadAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error) {
	out := new(QueryMulti)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryReadAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryReadAllDsc(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error) {
	out := new(QueryMulti)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryReadAllDsc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryMutationNodes(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryMutationNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryMutationEdges(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryMutationEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryNodeMutationNodes(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryNodeMutationNodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryNodeMutationEdges(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryNodeMutationEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryNodeMutationPath(ctx context.Context, in *Query, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryNodeMutationPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryDeleteAll(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*QueryMulti, error) {
	out := new(QueryMulti)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryDeleteAll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryFreeze(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryFreeze", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryThaw(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryThaw", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) QueryFrozen(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Query, error) {
	out := new(Query)
	err := c.cc.Invoke(ctx, "/proto.ModuleAPI/QueryFrozen", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *moduleAPIClient) ServiceInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (ModuleAPI_ServiceInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ModuleAPI_serviceDesc.Streams[0], "/proto.ModuleAPI/ServiceInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &moduleAPIServiceInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ModuleAPI_ServiceInitClient interface {
	Recv() (*ServiceControl, error)
	grpc.ClientStream
}

type moduleAPIServiceInitClient struct {
	grpc.ClientStream
}

func (x *moduleAPIServiceInitClient) Recv() (*ServiceControl, error) {
	m := new(ServiceControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *moduleAPIClient) MutationInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (ModuleAPI_MutationInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ModuleAPI_serviceDesc.Streams[1], "/proto.ModuleAPI/MutationInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &moduleAPIMutationInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ModuleAPI_MutationInitClient interface {
	Recv() (*MutationControl, error)
	grpc.ClientStream
}

type moduleAPIMutationInitClient struct {
	grpc.ClientStream
}

func (x *moduleAPIMutationInitClient) Recv() (*MutationControl, error) {
	m := new(MutationControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *moduleAPIClient) EventInit(ctx context.Context, in *ServiceInitRequest, opts ...grpc.CallOption) (ModuleAPI_EventInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ModuleAPI_serviceDesc.Streams[2], "/proto.ModuleAPI/EventInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &moduleAPIEventInitClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ModuleAPI_EventInitClient interface {
	Recv() (*EventControl, error)
	grpc.ClientStream
}

type moduleAPIEventInitClient struct {
	grpc.ClientStream
}

func (x *moduleAPIEventInitClient) Recv() (*EventControl, error) {
	m := new(EventControl)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *moduleAPIClient) DiscoveryInit(ctx context.Context, opts ...grpc.CallOption) (ModuleAPI_DiscoveryInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ModuleAPI_serviceDesc.Streams[3], "/proto.ModuleAPI/DiscoveryInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &moduleAPIDiscoveryInitClient{stream}
	return x, nil
}

type ModuleAPI_DiscoveryInitClient interface {
	Send(*DiscoveryEvent) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type moduleAPIDiscoveryInitClient struct {
	grpc.ClientStream
}

func (x *moduleAPIDiscoveryInitClient) Send(m *DiscoveryEvent) error {
	return x.ClientStream.SendMsg(m)
}

func (x *moduleAPIDiscoveryInitClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *moduleAPIClient) LoggerInit(ctx context.Context, opts ...grpc.CallOption) (ModuleAPI_LoggerInitClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ModuleAPI_serviceDesc.Streams[4], "/proto.ModuleAPI/LoggerInit", opts...)
	if err != nil {
		return nil, err
	}
	x := &moduleAPILoggerInitClient{stream}
	return x, nil
}

type ModuleAPI_LoggerInitClient interface {
	Send(*LogMessage) error
	CloseAndRecv() (*empty.Empty, error)
	grpc.ClientStream
}

type moduleAPILoggerInitClient struct {
	grpc.ClientStream
}

func (x *moduleAPILoggerInitClient) Send(m *LogMessage) error {
	return x.ClientStream.SendMsg(m)
}

func (x *moduleAPILoggerInitClient) CloseAndRecv() (*empty.Empty, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(empty.Empty)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ModuleAPIServer is the server API for ModuleAPI service.
type ModuleAPIServer interface {
	// Query language
	// TODO: create API for bulk CRUD operations
	QueryCreate(context.Context, *Query) (*Query, error)
	QueryRead(context.Context, *Query) (*Query, error)
	QueryReadDsc(context.Context, *Query) (*Query, error)
	QueryUpdate(context.Context, *Query) (*Query, error)
	QueryUpdateDsc(context.Context, *Query) (*Query, error)
	QueryDelete(context.Context, *Query) (*Query, error)
	QueryReadAll(context.Context, *empty.Empty) (*QueryMulti, error)
	QueryReadAllDsc(context.Context, *empty.Empty) (*QueryMulti, error)
	QueryMutationNodes(context.Context, *empty.Empty) (*Query, error)
	QueryMutationEdges(context.Context, *empty.Empty) (*Query, error)
	QueryNodeMutationNodes(context.Context, *Query) (*Query, error)
	QueryNodeMutationEdges(context.Context, *Query) (*Query, error)
	QueryNodeMutationPath(context.Context, *Query) (*Query, error)
	QueryDeleteAll(context.Context, *empty.Empty) (*QueryMulti, error)
	QueryFreeze(context.Context, *empty.Empty) (*Query, error)
	QueryThaw(context.Context, *empty.Empty) (*Query, error)
	QueryFrozen(context.Context, *empty.Empty) (*Query, error)
	// Service management
	ServiceInit(*ServiceInitRequest, ModuleAPI_ServiceInitServer) error
	// Mutation/Discover management
	MutationInit(*ServiceInitRequest, ModuleAPI_MutationInitServer) error
	// Event management
	EventInit(*ServiceInitRequest, ModuleAPI_EventInitServer) error
	// Discovery management
	DiscoveryInit(ModuleAPI_DiscoveryInitServer) error
	// Logging
	LoggerInit(ModuleAPI_LoggerInitServer) error
}

// UnimplementedModuleAPIServer can be embedded to have forward compatible implementations.
type UnimplementedModuleAPIServer struct {
}

func (*UnimplementedModuleAPIServer) QueryCreate(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCreate not implemented")
}
func (*UnimplementedModuleAPIServer) QueryRead(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRead not implemented")
}
func (*UnimplementedModuleAPIServer) QueryReadDsc(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryReadDsc not implemented")
}
func (*UnimplementedModuleAPIServer) QueryUpdate(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUpdate not implemented")
}
func (*UnimplementedModuleAPIServer) QueryUpdateDsc(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryUpdateDsc not implemented")
}
func (*UnimplementedModuleAPIServer) QueryDelete(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDelete not implemented")
}
func (*UnimplementedModuleAPIServer) QueryReadAll(context.Context, *empty.Empty) (*QueryMulti, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryReadAll not implemented")
}
func (*UnimplementedModuleAPIServer) QueryReadAllDsc(context.Context, *empty.Empty) (*QueryMulti, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryReadAllDsc not implemented")
}
func (*UnimplementedModuleAPIServer) QueryMutationNodes(context.Context, *empty.Empty) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryMutationNodes not implemented")
}
func (*UnimplementedModuleAPIServer) QueryMutationEdges(context.Context, *empty.Empty) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryMutationEdges not implemented")
}
func (*UnimplementedModuleAPIServer) QueryNodeMutationNodes(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryNodeMutationNodes not implemented")
}
func (*UnimplementedModuleAPIServer) QueryNodeMutationEdges(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryNodeMutationEdges not implemented")
}
func (*UnimplementedModuleAPIServer) QueryNodeMutationPath(context.Context, *Query) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryNodeMutationPath not implemented")
}
func (*UnimplementedModuleAPIServer) QueryDeleteAll(context.Context, *empty.Empty) (*QueryMulti, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryDeleteAll not implemented")
}
func (*UnimplementedModuleAPIServer) QueryFreeze(context.Context, *empty.Empty) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryFreeze not implemented")
}
func (*UnimplementedModuleAPIServer) QueryThaw(context.Context, *empty.Empty) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryThaw not implemented")
}
func (*UnimplementedModuleAPIServer) QueryFrozen(context.Context, *empty.Empty) (*Query, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryFrozen not implemented")
}
func (*UnimplementedModuleAPIServer) ServiceInit(*ServiceInitRequest, ModuleAPI_ServiceInitServer) error {
	return status.Errorf(codes.Unimplemented, "method ServiceInit not implemented")
}
func (*UnimplementedModuleAPIServer) MutationInit(*ServiceInitRequest, ModuleAPI_MutationInitServer) error {
	return status.Errorf(codes.Unimplemented, "method MutationInit not implemented")
}
func (*UnimplementedModuleAPIServer) EventInit(*ServiceInitRequest, ModuleAPI_EventInitServer) error {
	return status.Errorf(codes.Unimplemented, "method EventInit not implemented")
}
func (*UnimplementedModuleAPIServer) DiscoveryInit(ModuleAPI_DiscoveryInitServer) error {
	return status.Errorf(codes.Unimplemented, "method DiscoveryInit not implemented")
}
func (*UnimplementedModuleAPIServer) LoggerInit(ModuleAPI_LoggerInitServer) error {
	return status.Errorf(codes.Unimplemented, "method LoggerInit not implemented")
}

func RegisterModuleAPIServer(s *grpc.Server, srv ModuleAPIServer) {
	s.RegisterService(&_ModuleAPI_serviceDesc, srv)
}

func _ModuleAPI_QueryCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryCreate(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryRead_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryRead(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryRead",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryRead(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryReadDsc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryReadDsc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryReadDsc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryReadDsc(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryUpdate(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryUpdateDsc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryUpdateDsc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryUpdateDsc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryUpdateDsc(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryDelete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryDelete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryDelete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryDelete(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryReadAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryReadAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryReadAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryReadAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryReadAllDsc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryReadAllDsc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryReadAllDsc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryReadAllDsc(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryMutationNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryMutationNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryMutationNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryMutationNodes(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryMutationEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryMutationEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryMutationEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryMutationEdges(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryNodeMutationNodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryNodeMutationNodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryNodeMutationNodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryNodeMutationNodes(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryNodeMutationEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryNodeMutationEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryNodeMutationEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryNodeMutationEdges(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryNodeMutationPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Query)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryNodeMutationPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryNodeMutationPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryNodeMutationPath(ctx, req.(*Query))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryDeleteAll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryDeleteAll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryDeleteAll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryDeleteAll(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryFreeze_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryFreeze(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryFreeze",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryFreeze(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryThaw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryThaw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryThaw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryThaw(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_QueryFrozen_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ModuleAPIServer).QueryFrozen(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.ModuleAPI/QueryFrozen",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ModuleAPIServer).QueryFrozen(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ModuleAPI_ServiceInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceInitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ModuleAPIServer).ServiceInit(m, &moduleAPIServiceInitServer{stream})
}

type ModuleAPI_ServiceInitServer interface {
	Send(*ServiceControl) error
	grpc.ServerStream
}

type moduleAPIServiceInitServer struct {
	grpc.ServerStream
}

func (x *moduleAPIServiceInitServer) Send(m *ServiceControl) error {
	return x.ServerStream.SendMsg(m)
}

func _ModuleAPI_MutationInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceInitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ModuleAPIServer).MutationInit(m, &moduleAPIMutationInitServer{stream})
}

type ModuleAPI_MutationInitServer interface {
	Send(*MutationControl) error
	grpc.ServerStream
}

type moduleAPIMutationInitServer struct {
	grpc.ServerStream
}

func (x *moduleAPIMutationInitServer) Send(m *MutationControl) error {
	return x.ServerStream.SendMsg(m)
}

func _ModuleAPI_EventInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ServiceInitRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ModuleAPIServer).EventInit(m, &moduleAPIEventInitServer{stream})
}

type ModuleAPI_EventInitServer interface {
	Send(*EventControl) error
	grpc.ServerStream
}

type moduleAPIEventInitServer struct {
	grpc.ServerStream
}

func (x *moduleAPIEventInitServer) Send(m *EventControl) error {
	return x.ServerStream.SendMsg(m)
}

func _ModuleAPI_DiscoveryInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ModuleAPIServer).DiscoveryInit(&moduleAPIDiscoveryInitServer{stream})
}

type ModuleAPI_DiscoveryInitServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*DiscoveryEvent, error)
	grpc.ServerStream
}

type moduleAPIDiscoveryInitServer struct {
	grpc.ServerStream
}

func (x *moduleAPIDiscoveryInitServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *moduleAPIDiscoveryInitServer) Recv() (*DiscoveryEvent, error) {
	m := new(DiscoveryEvent)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ModuleAPI_LoggerInit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ModuleAPIServer).LoggerInit(&moduleAPILoggerInitServer{stream})
}

type ModuleAPI_LoggerInitServer interface {
	SendAndClose(*empty.Empty) error
	Recv() (*LogMessage, error)
	grpc.ServerStream
}

type moduleAPILoggerInitServer struct {
	grpc.ServerStream
}

func (x *moduleAPILoggerInitServer) SendAndClose(m *empty.Empty) error {
	return x.ServerStream.SendMsg(m)
}

func (x *moduleAPILoggerInitServer) Recv() (*LogMessage, error) {
	m := new(LogMessage)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _ModuleAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.ModuleAPI",
	HandlerType: (*ModuleAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryCreate",
			Handler:    _ModuleAPI_QueryCreate_Handler,
		},
		{
			MethodName: "QueryRead",
			Handler:    _ModuleAPI_QueryRead_Handler,
		},
		{
			MethodName: "QueryReadDsc",
			Handler:    _ModuleAPI_QueryReadDsc_Handler,
		},
		{
			MethodName: "QueryUpdate",
			Handler:    _ModuleAPI_QueryUpdate_Handler,
		},
		{
			MethodName: "QueryUpdateDsc",
			Handler:    _ModuleAPI_QueryUpdateDsc_Handler,
		},
		{
			MethodName: "QueryDelete",
			Handler:    _ModuleAPI_QueryDelete_Handler,
		},
		{
			MethodName: "QueryReadAll",
			Handler:    _ModuleAPI_QueryReadAll_Handler,
		},
		{
			MethodName: "QueryReadAllDsc",
			Handler:    _ModuleAPI_QueryReadAllDsc_Handler,
		},
		{
			MethodName: "QueryMutationNodes",
			Handler:    _ModuleAPI_QueryMutationNodes_Handler,
		},
		{
			MethodName: "QueryMutationEdges",
			Handler:    _ModuleAPI_QueryMutationEdges_Handler,
		},
		{
			MethodName: "QueryNodeMutationNodes",
			Handler:    _ModuleAPI_QueryNodeMutationNodes_Handler,
		},
		{
			MethodName: "QueryNodeMutationEdges",
			Handler:    _ModuleAPI_QueryNodeMutationEdges_Handler,
		},
		{
			MethodName: "QueryNodeMutationPath",
			Handler:    _ModuleAPI_QueryNodeMutationPath_Handler,
		},
		{
			MethodName: "QueryDeleteAll",
			Handler:    _ModuleAPI_QueryDeleteAll_Handler,
		},
		{
			MethodName: "QueryFreeze",
			Handler:    _ModuleAPI_QueryFreeze_Handler,
		},
		{
			MethodName: "QueryThaw",
			Handler:    _ModuleAPI_QueryThaw_Handler,
		},
		{
			MethodName: "QueryFrozen",
			Handler:    _ModuleAPI_QueryFrozen_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ServiceInit",
			Handler:       _ModuleAPI_ServiceInit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MutationInit",
			Handler:       _ModuleAPI_MutationInit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "EventInit",
			Handler:       _ModuleAPI_EventInit_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DiscoveryInit",
			Handler:       _ModuleAPI_DiscoveryInit_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "LoggerInit",
			Handler:       _ModuleAPI_LoggerInit_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "ModuleAPI.proto",
}
