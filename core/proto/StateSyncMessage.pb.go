// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: StateSyncMessage.proto

package proto

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// StateSyncMessage are messages sent by StateSync
type StateSyncMessage struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,2,opt,name=hmac,proto3" json:"hmac,omitempty"`
	Message              []byte   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StateSyncMessage) Reset()         { *m = StateSyncMessage{} }
func (m *StateSyncMessage) String() string { return proto.CompactTextString(m) }
func (*StateSyncMessage) ProtoMessage()    {}
func (*StateSyncMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2b8306cd75556d, []int{0}
}
func (m *StateSyncMessage) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StateSyncMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StateSyncMessage.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StateSyncMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StateSyncMessage.Merge(m, src)
}
func (m *StateSyncMessage) XXX_Size() int {
	return m.Size()
}
func (m *StateSyncMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_StateSyncMessage.DiscardUnknown(m)
}

var xxx_messageInfo_StateSyncMessage proto.InternalMessageInfo

func (m *StateSyncMessage) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StateSyncMessage) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

func (m *StateSyncMessage) GetMessage() []byte {
	if m != nil {
		return m.Message
	}
	return nil
}

func (*StateSyncMessage) XXX_MessageName() string {
	return "proto.StateSyncMessage"
}

type PhoneHomeRequest struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PhoneHomeRequest) Reset()         { *m = PhoneHomeRequest{} }
func (m *PhoneHomeRequest) String() string { return proto.CompactTextString(m) }
func (*PhoneHomeRequest) ProtoMessage()    {}
func (*PhoneHomeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2b8306cd75556d, []int{1}
}
func (m *PhoneHomeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneHomeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneHomeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneHomeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneHomeRequest.Merge(m, src)
}
func (m *PhoneHomeRequest) XXX_Size() int {
	return m.Size()
}
func (m *PhoneHomeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneHomeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneHomeRequest proto.InternalMessageInfo

func (m *PhoneHomeRequest) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (*PhoneHomeRequest) XXX_MessageName() string {
	return "proto.PhoneHomeRequest"
}

type PhoneHomeReply struct {
	Pid                  []byte            `protobuf:"bytes,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Key                  []byte            `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Cfg                  *StateSyncMessage `protobuf:"bytes,3,opt,name=cfg,proto3" json:"cfg,omitempty"`
	Dsc                  *StateSyncMessage `protobuf:"bytes,4,opt,name=dsc,proto3" json:"dsc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PhoneHomeReply) Reset()         { *m = PhoneHomeReply{} }
func (m *PhoneHomeReply) String() string { return proto.CompactTextString(m) }
func (*PhoneHomeReply) ProtoMessage()    {}
func (*PhoneHomeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fd2b8306cd75556d, []int{2}
}
func (m *PhoneHomeReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PhoneHomeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PhoneHomeReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PhoneHomeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneHomeReply.Merge(m, src)
}
func (m *PhoneHomeReply) XXX_Size() int {
	return m.Size()
}
func (m *PhoneHomeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneHomeReply.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneHomeReply proto.InternalMessageInfo

func (m *PhoneHomeReply) GetPid() []byte {
	if m != nil {
		return m.Pid
	}
	return nil
}

func (m *PhoneHomeReply) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *PhoneHomeReply) GetCfg() *StateSyncMessage {
	if m != nil {
		return m.Cfg
	}
	return nil
}

func (m *PhoneHomeReply) GetDsc() *StateSyncMessage {
	if m != nil {
		return m.Dsc
	}
	return nil
}

func (*PhoneHomeReply) XXX_MessageName() string {
	return "proto.PhoneHomeReply"
}
func init() {
	proto.RegisterType((*StateSyncMessage)(nil), "proto.StateSyncMessage")
	golang_proto.RegisterType((*StateSyncMessage)(nil), "proto.StateSyncMessage")
	proto.RegisterType((*PhoneHomeRequest)(nil), "proto.PhoneHomeRequest")
	golang_proto.RegisterType((*PhoneHomeRequest)(nil), "proto.PhoneHomeRequest")
	proto.RegisterType((*PhoneHomeReply)(nil), "proto.PhoneHomeReply")
	golang_proto.RegisterType((*PhoneHomeReply)(nil), "proto.PhoneHomeReply")
}

func init() { proto.RegisterFile("StateSyncMessage.proto", fileDescriptor_fd2b8306cd75556d) }
func init() { golang_proto.RegisterFile("StateSyncMessage.proto", fileDescriptor_fd2b8306cd75556d) }

var fileDescriptor_fd2b8306cd75556d = []byte{
	// 276 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x0b, 0x2e, 0x49, 0x2c,
	0x49, 0x0d, 0xae, 0xcc, 0x4b, 0xf6, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca,
	0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0xba, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9,
	0xf9, 0xb9, 0xfa, 0xe9, 0xf9, 0xe9, 0xf9, 0xfa, 0x60, 0xe1, 0xa4, 0xd2, 0x34, 0x30, 0x0f, 0xcc,
	0x01, 0xb3, 0x20, 0xba, 0x94, 0x02, 0xb8, 0x04, 0xd0, 0xcd, 0x13, 0xe2, 0xe3, 0x62, 0xca, 0x4c,
	0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x09, 0x62, 0xca, 0x4c, 0x11, 0x12, 0xe2, 0x62, 0xc9, 0xc8,
	0x4d, 0x4c, 0x96, 0x60, 0x02, 0x8b, 0x80, 0xd9, 0x42, 0x12, 0x5c, 0xec, 0xb9, 0x10, 0xe5, 0x12,
	0xcc, 0x60, 0x61, 0x18, 0x57, 0x49, 0x89, 0x4b, 0x20, 0x20, 0x23, 0x3f, 0x2f, 0xd5, 0x23, 0x3f,
	0x37, 0x35, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x04, 0xdd, 0x44, 0xa5, 0x2e, 0x46, 0x2e, 0x3e,
	0x24, 0x45, 0x05, 0x39, 0x95, 0x42, 0x02, 0x5c, 0xcc, 0x05, 0x70, 0x35, 0x20, 0x26, 0x48, 0x24,
	0x3b, 0xb5, 0x12, 0x6a, 0x2b, 0x88, 0x29, 0xa4, 0xc9, 0xc5, 0x9c, 0x9c, 0x96, 0x0e, 0xb6, 0x90,
	0xdb, 0x48, 0x1c, 0xe2, 0x03, 0x3d, 0x74, 0xe7, 0x07, 0x81, 0xd4, 0x80, 0x94, 0xa6, 0x14, 0x27,
	0x4b, 0xb0, 0x10, 0x50, 0x9a, 0x52, 0x9c, 0x6c, 0xe4, 0xcb, 0xc5, 0x09, 0x97, 0x10, 0x72, 0xe0,
	0xe2, 0x09, 0x0a, 0x70, 0x86, 0xbb, 0x4d, 0x08, 0xa6, 0x15, 0xdd, 0x4b, 0x52, 0xa2, 0x98, 0x12,
	0x05, 0x39, 0x95, 0x4a, 0x0c, 0x4e, 0xb2, 0x27, 0x1e, 0xc9, 0x31, 0x5e, 0x78, 0x24, 0xc7, 0xf8,
	0xe0, 0x91, 0x1c, 0xe3, 0x81, 0xc7, 0x72, 0x8c, 0x27, 0x1e, 0xcb, 0x31, 0x46, 0xb1, 0xeb, 0x59,
	0x43, 0x22, 0x82, 0x0d, 0x4c, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xce, 0x92, 0xca, 0x73,
	0xc7, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StateSyncClient is the client API for StateSync service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StateSyncClient interface {
	RPCPhoneHome(ctx context.Context, in *PhoneHomeRequest, opts ...grpc.CallOption) (*PhoneHomeReply, error)
}

type stateSyncClient struct {
	cc *grpc.ClientConn
}

func NewStateSyncClient(cc *grpc.ClientConn) StateSyncClient {
	return &stateSyncClient{cc}
}

func (c *stateSyncClient) RPCPhoneHome(ctx context.Context, in *PhoneHomeRequest, opts ...grpc.CallOption) (*PhoneHomeReply, error) {
	out := new(PhoneHomeReply)
	err := c.cc.Invoke(ctx, "/proto.StateSync/RPCPhoneHome", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StateSyncServer is the server API for StateSync service.
type StateSyncServer interface {
	RPCPhoneHome(context.Context, *PhoneHomeRequest) (*PhoneHomeReply, error)
}

// UnimplementedStateSyncServer can be embedded to have forward compatible implementations.
type UnimplementedStateSyncServer struct {
}

func (*UnimplementedStateSyncServer) RPCPhoneHome(ctx context.Context, req *PhoneHomeRequest) (*PhoneHomeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RPCPhoneHome not implemented")
}

func RegisterStateSyncServer(s *grpc.Server, srv StateSyncServer) {
	s.RegisterService(&_StateSync_serviceDesc, srv)
}

func _StateSync_RPCPhoneHome_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneHomeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StateSyncServer).RPCPhoneHome(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StateSync/RPCPhoneHome",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StateSyncServer).RPCPhoneHome(ctx, req.(*PhoneHomeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StateSync_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StateSync",
	HandlerType: (*StateSyncServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RPCPhoneHome",
			Handler:    _StateSync_RPCPhoneHome_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "StateSyncMessage.proto",
}

func (m *StateSyncMessage) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StateSyncMessage) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StateSyncMessage) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintStateSyncMessage(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Hmac) > 0 {
		i -= len(m.Hmac)
		copy(dAtA[i:], m.Hmac)
		i = encodeVarintStateSyncMessage(dAtA, i, uint64(len(m.Hmac)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintStateSyncMessage(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneHomeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneHomeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneHomeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintStateSyncMessage(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *PhoneHomeReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PhoneHomeReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PhoneHomeReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Dsc != nil {
		{
			size, err := m.Dsc.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintStateSyncMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if m.Cfg != nil {
		{
			size, err := m.Cfg.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintStateSyncMessage(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Key) > 0 {
		i -= len(m.Key)
		copy(dAtA[i:], m.Key)
		i = encodeVarintStateSyncMessage(dAtA, i, uint64(len(m.Key)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Pid) > 0 {
		i -= len(m.Pid)
		copy(dAtA[i:], m.Pid)
		i = encodeVarintStateSyncMessage(dAtA, i, uint64(len(m.Pid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintStateSyncMessage(dAtA []byte, offset int, v uint64) int {
	offset -= sovStateSyncMessage(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StateSyncMessage) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	l = len(m.Hmac)
	if l > 0 {
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhoneHomeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PhoneHomeReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Pid)
	if l > 0 {
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	l = len(m.Key)
	if l > 0 {
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	if m.Cfg != nil {
		l = m.Cfg.Size()
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	if m.Dsc != nil {
		l = m.Dsc.Size()
		n += 1 + l + sovStateSyncMessage(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovStateSyncMessage(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStateSyncMessage(x uint64) (n int) {
	return sovStateSyncMessage(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StateSyncMessage) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStateSyncMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StateSyncMessage: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StateSyncMessage: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id[:0], dAtA[iNdEx:postIndex]...)
			if m.Id == nil {
				m.Id = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Hmac", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Hmac = append(m.Hmac[:0], dAtA[iNdEx:postIndex]...)
			if m.Hmac == nil {
				m.Hmac = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = append(m.Message[:0], dAtA[iNdEx:postIndex]...)
			if m.Message == nil {
				m.Message = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStateSyncMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneHomeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStateSyncMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneHomeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneHomeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id[:0], dAtA[iNdEx:postIndex]...)
			if m.Id == nil {
				m.Id = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStateSyncMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PhoneHomeReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStateSyncMessage
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PhoneHomeReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PhoneHomeReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pid", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pid = append(m.Pid[:0], dAtA[iNdEx:postIndex]...)
			if m.Pid == nil {
				m.Pid = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Key", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Key = append(m.Key[:0], dAtA[iNdEx:postIndex]...)
			if m.Key == nil {
				m.Key = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cfg", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cfg == nil {
				m.Cfg = &StateSyncMessage{}
			}
			if err := m.Cfg.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dsc", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Dsc == nil {
				m.Dsc = &StateSyncMessage{}
			}
			if err := m.Dsc.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStateSyncMessage(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStateSyncMessage
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStateSyncMessage(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStateSyncMessage
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStateSyncMessage
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStateSyncMessage
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStateSyncMessage
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStateSyncMessage
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStateSyncMessage        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStateSyncMessage          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStateSyncMessage = fmt.Errorf("proto: unexpected end of group")
)
