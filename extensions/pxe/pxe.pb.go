// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pxe.proto

package pxe

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Client_Method int32

const (
	Client_PXE  Client_Method = 0
	Client_iPXE Client_Method = 1
)

var Client_Method_name = map[int32]string{
	0: "PXE",
	1: "iPXE",
}

var Client_Method_value = map[string]int32{
	"PXE":  0,
	"iPXE": 1,
}

func (x Client_Method) String() string {
	return proto.EnumName(Client_Method_name, int32(x))
}

func (Client_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c22e096d9600f531, []int{0, 0}
}

type Client_State int32

const (
	Client_NONE Client_State = 0
	Client_WAIT Client_State = 1
	Client_INIT Client_State = 2
)

var Client_State_name = map[int32]string{
	0: "NONE",
	1: "WAIT",
	2: "INIT",
}

var Client_State_value = map[string]int32{
	"NONE": 0,
	"WAIT": 1,
	"INIT": 2,
}

func (x Client_State) String() string {
	return proto.EnumName(Client_State_name, int32(x))
}

func (Client_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c22e096d9600f531, []int{0, 1}
}

type Client struct {
	Method               Client_Method `protobuf:"varint,1,opt,name=method,proto3,enum=PXE.Client_Method" json:"method,omitempty"`
	State                Client_State  `protobuf:"varint,2,opt,name=state,proto3,enum=PXE.Client_State" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Client) Reset()         { *m = Client{} }
func (m *Client) String() string { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()    {}
func (*Client) Descriptor() ([]byte, []int) {
	return fileDescriptor_c22e096d9600f531, []int{0}
}
func (m *Client) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Client.Unmarshal(m, b)
}
func (m *Client) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Client.Marshal(b, m, deterministic)
}
func (m *Client) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Client.Merge(m, src)
}
func (m *Client) XXX_Size() int {
	return xxx_messageInfo_Client.Size(m)
}
func (m *Client) XXX_DiscardUnknown() {
	xxx_messageInfo_Client.DiscardUnknown(m)
}

var xxx_messageInfo_Client proto.InternalMessageInfo

func (m *Client) GetMethod() Client_Method {
	if m != nil {
		return m.Method
	}
	return Client_PXE
}

func (m *Client) GetState() Client_State {
	if m != nil {
		return m.State
	}
	return Client_NONE
}

func init() {
	proto.RegisterEnum("PXE.Client_Method", Client_Method_name, Client_Method_value)
	proto.RegisterEnum("PXE.Client_State", Client_State_name, Client_State_value)
	proto.RegisterType((*Client)(nil), "PXE.Client")
}

func init() { proto.RegisterFile("pxe.proto", fileDescriptor_c22e096d9600f531) }

var fileDescriptor_c22e096d9600f531 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0xa8, 0x48, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x0e, 0x88, 0x70, 0x55, 0x5a, 0xc8, 0xc8, 0xc5, 0xe6,
	0x9c, 0x93, 0x99, 0x9a, 0x57, 0x22, 0xa4, 0xc5, 0xc5, 0x96, 0x9b, 0x5a, 0x92, 0x91, 0x9f, 0x22,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xa4, 0x17, 0x10, 0xe1, 0xaa, 0x07, 0x91, 0xd4, 0xf3,
	0x05, 0xcb, 0x04, 0x41, 0x55, 0x08, 0xa9, 0x73, 0xb1, 0x16, 0x97, 0x24, 0x96, 0xa4, 0x4a, 0x30,
	0x81, 0x95, 0x0a, 0x22, 0x2b, 0x0d, 0x06, 0x49, 0x04, 0x41, 0xe4, 0x95, 0xa4, 0xb9, 0xd8, 0x20,
	0x5a, 0x85, 0xd8, 0xb9, 0x40, 0x16, 0x0a, 0x30, 0x08, 0x71, 0x70, 0xb1, 0x64, 0x82, 0x58, 0x8c,
	0x4a, 0xaa, 0x5c, 0xac, 0x60, 0xc5, 0x20, 0x21, 0x3f, 0x7f, 0x3f, 0xa8, 0x64, 0xb8, 0xa3, 0x67,
	0x88, 0x00, 0x23, 0x88, 0xe5, 0xe9, 0xe7, 0x19, 0x22, 0xc0, 0xe4, 0xc4, 0x1e, 0xc5, 0xaa, 0x67,
	0x5d, 0x50, 0x91, 0x9a, 0xc4, 0x06, 0x76, 0xb8, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x6e, 0x3c,
	0x44, 0xcf, 0xc5, 0x00, 0x00, 0x00,
}
