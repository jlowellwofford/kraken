// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rfthermal.proto

package rfthermal

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Temp_CPUThermalState int32

const (
	Temp_CPU_TEMP_NONE     Temp_CPUThermalState = 0
	Temp_CPU_TEMP_NORMAL   Temp_CPUThermalState = 1
	Temp_CPU_TEMP_HIGH     Temp_CPUThermalState = 2
	Temp_CPU_TEMP_CRITICAL Temp_CPUThermalState = 3
)

var Temp_CPUThermalState_name = map[int32]string{
	0: "CPU_TEMP_NONE",
	1: "CPU_TEMP_NORMAL",
	2: "CPU_TEMP_HIGH",
	3: "CPU_TEMP_CRITICAL",
}

var Temp_CPUThermalState_value = map[string]int32{
	"CPU_TEMP_NONE":     0,
	"CPU_TEMP_NORMAL":   1,
	"CPU_TEMP_HIGH":     2,
	"CPU_TEMP_CRITICAL": 3,
}

func (x Temp_CPUThermalState) String() string {
	return proto.EnumName(Temp_CPUThermalState_name, int32(x))
}

func (Temp_CPUThermalState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cb37779bcf7d5ac7, []int{0, 0}
}

type Temp struct {
	State                Temp_CPUThermalState `protobuf:"varint,1,opt,name=state,proto3,enum=RFThermal.Temp_CPUThermalState" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Temp) Reset()         { *m = Temp{} }
func (m *Temp) String() string { return proto.CompactTextString(m) }
func (*Temp) ProtoMessage()    {}
func (*Temp) Descriptor() ([]byte, []int) {
	return fileDescriptor_cb37779bcf7d5ac7, []int{0}
}
func (m *Temp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Temp.Unmarshal(m, b)
}
func (m *Temp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Temp.Marshal(b, m, deterministic)
}
func (m *Temp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Temp.Merge(m, src)
}
func (m *Temp) XXX_Size() int {
	return xxx_messageInfo_Temp.Size(m)
}
func (m *Temp) XXX_DiscardUnknown() {
	xxx_messageInfo_Temp.DiscardUnknown(m)
}

var xxx_messageInfo_Temp proto.InternalMessageInfo

func (m *Temp) GetState() Temp_CPUThermalState {
	if m != nil {
		return m.State
	}
	return Temp_CPU_TEMP_NONE
}

func init() {
	proto.RegisterEnum("RFThermal.Temp_CPUThermalState", Temp_CPUThermalState_name, Temp_CPUThermalState_value)
	proto.RegisterType((*Temp)(nil), "RFThermal.Temp")
}

func init() { proto.RegisterFile("rfthermal.proto", fileDescriptor_cb37779bcf7d5ac7) }

var fileDescriptor_cb37779bcf7d5ac7 = []byte{
	// 166 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4a, 0x2b, 0xc9,
	0x48, 0x2d, 0xca, 0x4d, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x0c, 0x72, 0x0b,
	0x81, 0x08, 0x28, 0x2d, 0x62, 0xe4, 0x62, 0x09, 0x49, 0xcd, 0x2d, 0x10, 0x32, 0xe5, 0x62, 0x2d,
	0x2e, 0x49, 0x2c, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x33, 0x92, 0xd7, 0x83, 0xab, 0xd1,
	0x03, 0xc9, 0xeb, 0x39, 0x07, 0x84, 0x42, 0xf9, 0xc1, 0x20, 0x65, 0x41, 0x10, 0xd5, 0x4a, 0xc9,
	0x5c, 0xfc, 0x68, 0x32, 0x42, 0x82, 0x5c, 0xbc, 0xce, 0x01, 0xa1, 0xf1, 0x21, 0xae, 0xbe, 0x01,
	0xf1, 0x7e, 0xfe, 0x7e, 0xae, 0x02, 0x0c, 0x42, 0xc2, 0x60, 0x55, 0x30, 0xa1, 0x20, 0x5f, 0x47,
	0x1f, 0x01, 0x46, 0x14, 0x75, 0x1e, 0x9e, 0xee, 0x1e, 0x02, 0x4c, 0x42, 0xa2, 0x5c, 0x82, 0x70,
	0x21, 0xe7, 0x20, 0xcf, 0x10, 0x4f, 0x67, 0x47, 0x1f, 0x01, 0x66, 0x27, 0xde, 0x28, 0x6e, 0x3d,
	0x6b, 0xb8, 0x27, 0x92, 0xd8, 0xc0, 0xbe, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x27, 0x49,
	0xb5, 0xab, 0xd8, 0x00, 0x00, 0x00,
}
