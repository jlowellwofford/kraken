// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rpi3.proto

package rpi3

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Pi_Model int32

const (
	Pi_ThreeB     Pi_Model = 0
	Pi_ThreeBPlus Pi_Model = 1
)

var Pi_Model_name = map[int32]string{
	0: "ThreeB",
	1: "ThreeBPlus",
}

var Pi_Model_value = map[string]int32{
	"ThreeB":     0,
	"ThreeBPlus": 1,
}

func (x Pi_Model) String() string {
	return proto.EnumName(Pi_Model_name, int32(x))
}

func (Pi_Model) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e4dbb54cb6b2047, []int{0, 0}
}

type Pi_PXE int32

const (
	Pi_NONE Pi_PXE = 0
	Pi_WAIT Pi_PXE = 1
	Pi_INIT Pi_PXE = 2
)

var Pi_PXE_name = map[int32]string{
	0: "NONE",
	1: "WAIT",
	2: "INIT",
}

var Pi_PXE_value = map[string]int32{
	"NONE": 0,
	"WAIT": 1,
	"INIT": 2,
}

func (x Pi_PXE) String() string {
	return proto.EnumName(Pi_PXE_name, int32(x))
}

func (Pi_PXE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4e4dbb54cb6b2047, []int{0, 1}
}

type Pi struct {
	Chassis              string   `protobuf:"bytes,1,opt,name=chassis,proto3" json:"chassis,omitempty"`
	Rank                 uint32   `protobuf:"varint,2,opt,name=rank,proto3" json:"rank,omitempty"`
	Model                Pi_Model `protobuf:"varint,3,opt,name=model,proto3,enum=RPi3.Pi_Model" json:"model,omitempty"`
	Pxe                  Pi_PXE   `protobuf:"varint,4,opt,name=pxe,proto3,enum=RPi3.Pi_PXE" json:"pxe,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pi) Reset()         { *m = Pi{} }
func (m *Pi) String() string { return proto.CompactTextString(m) }
func (*Pi) ProtoMessage()    {}
func (*Pi) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e4dbb54cb6b2047, []int{0}
}
func (m *Pi) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pi.Unmarshal(m, b)
}
func (m *Pi) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pi.Marshal(b, m, deterministic)
}
func (m *Pi) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pi.Merge(m, src)
}
func (m *Pi) XXX_Size() int {
	return xxx_messageInfo_Pi.Size(m)
}
func (m *Pi) XXX_DiscardUnknown() {
	xxx_messageInfo_Pi.DiscardUnknown(m)
}

var xxx_messageInfo_Pi proto.InternalMessageInfo

func (m *Pi) GetChassis() string {
	if m != nil {
		return m.Chassis
	}
	return ""
}

func (m *Pi) GetRank() uint32 {
	if m != nil {
		return m.Rank
	}
	return 0
}

func (m *Pi) GetModel() Pi_Model {
	if m != nil {
		return m.Model
	}
	return Pi_ThreeB
}

func (m *Pi) GetPxe() Pi_PXE {
	if m != nil {
		return m.Pxe
	}
	return Pi_NONE
}

func init() {
	proto.RegisterEnum("RPi3.Pi_Model", Pi_Model_name, Pi_Model_value)
	proto.RegisterEnum("RPi3.Pi_PXE", Pi_PXE_name, Pi_PXE_value)
	proto.RegisterType((*Pi)(nil), "RPi3.Pi")
}

func init() { proto.RegisterFile("rpi3.proto", fileDescriptor_4e4dbb54cb6b2047) }

var fileDescriptor_4e4dbb54cb6b2047 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x3c, 0x8f, 0x41, 0x4b, 0x87, 0x30,
	0x18, 0xc6, 0xff, 0xd3, 0x69, 0xf6, 0x52, 0x32, 0xde, 0xd3, 0x4e, 0x21, 0xda, 0xc1, 0xd3, 0x0e,
	0x79, 0xec, 0x94, 0xe0, 0xc1, 0x43, 0x36, 0x86, 0x90, 0x74, 0xb3, 0x1a, 0x38, 0xb2, 0x94, 0xad,
	0xa0, 0xcf, 0xd7, 0x27, 0x8b, 0x4d, 0xea, 0xf6, 0x7b, 0xdf, 0xe7, 0xc7, 0x03, 0x0f, 0x80, 0xdd,
	0x4d, 0x23, 0x76, 0xbb, 0x7d, 0x6e, 0x48, 0x95, 0x34, 0x4d, 0xf9, 0x43, 0x20, 0x92, 0x06, 0x39,
	0x9c, 0xbd, 0x2c, 0xb3, 0x73, 0xc6, 0x71, 0x52, 0x90, 0xfa, 0x5c, 0xfd, 0x9d, 0x88, 0x40, 0xed,
	0xfc, 0xf1, 0xc6, 0xa3, 0x82, 0xd4, 0x97, 0x2a, 0x30, 0x5e, 0x43, 0xf2, 0xbe, 0xbd, 0xea, 0x95,
	0xc7, 0x05, 0xa9, 0xf3, 0x9b, 0x5c, 0xf8, 0x2a, 0x21, 0x8d, 0xb8, 0xf7, 0x5f, 0x75, 0x84, 0x78,
	0x05, 0xf1, 0xfe, 0xad, 0x39, 0x0d, 0xce, 0xc5, 0xbf, 0x23, 0xa7, 0x4e, 0xf9, 0xa0, 0xac, 0x20,
	0x09, 0x3e, 0x02, 0xa4, 0xe3, 0x62, 0xb5, 0x6e, 0xd9, 0x09, 0x73, 0x80, 0x83, 0xe5, 0xfa, 0xe5,
	0x18, 0x29, 0x2b, 0x88, 0xe5, 0xd4, 0x61, 0x06, 0x74, 0x78, 0x18, 0x3a, 0x76, 0xf2, 0xf4, 0x78,
	0xd7, 0x8f, 0x8c, 0x78, 0xea, 0x87, 0x7e, 0x64, 0x51, 0x9b, 0x3d, 0xa5, 0xe2, 0xd6, 0x4f, 0x7b,
	0x4e, 0xc3, 0xb6, 0xe6, 0x37, 0x00, 0x00, 0xff, 0xff, 0x29, 0xbb, 0x19, 0x2b, 0xe9, 0x00, 0x00,
	0x00,
}
