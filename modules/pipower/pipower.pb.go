// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pipower.proto

package pipower

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Config struct {
	Servers              map[string]*Server `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Tick                 string             `protobuf:"bytes,2,opt,name=tick,proto3" json:"tick,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cfd5895e55d306c, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetServers() map[string]*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Config) GetTick() string {
	if m != nil {
		return m.Tick
	}
	return ""
}

type Server struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_2cfd5895e55d306c, []int{1}
}
func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Server) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Server) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "PiPower.Config")
	proto.RegisterMapType((map[string]*Server)(nil), "PiPower.Config.ServersEntry")
	proto.RegisterType((*Server)(nil), "PiPower.Server")
}

func init() { proto.RegisterFile("pipower.proto", fileDescriptor_2cfd5895e55d306c) }

var fileDescriptor_2cfd5895e55d306c = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xc8, 0x2c, 0xc8,
	0x2f, 0x4f, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x0f, 0xc8, 0x0c, 0x00, 0x71,
	0x95, 0x16, 0x32, 0x72, 0xb1, 0x39, 0xe7, 0xe7, 0xa5, 0x65, 0xa6, 0x0b, 0x99, 0x71, 0xb1, 0x17,
	0xa7, 0x16, 0x95, 0xa5, 0x16, 0x15, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x1b, 0xc9, 0xe8, 0x41,
	0x55, 0xe9, 0x41, 0x54, 0xe8, 0x05, 0x43, 0xa4, 0x5d, 0xf3, 0x4a, 0x8a, 0x2a, 0x83, 0x60, 0x8a,
	0x85, 0x84, 0xb8, 0x58, 0x4a, 0x32, 0x93, 0xb3, 0x25, 0x98, 0x14, 0x18, 0x35, 0x38, 0x83, 0xc0,
	0x6c, 0x29, 0x6f, 0x2e, 0x1e, 0x64, 0xc5, 0x42, 0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12, 0x8c,
	0x60, 0x25, 0x20, 0xa6, 0x90, 0x2a, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69, 0x2a, 0x58, 0x1b, 0xb7,
	0x11, 0x3f, 0xdc, 0x2e, 0x88, 0xbe, 0x20, 0x88, 0xac, 0x15, 0x93, 0x05, 0xa3, 0x92, 0x03, 0x17,
	0x1b, 0x44, 0x10, 0x64, 0x55, 0x5e, 0x62, 0x6e, 0x2a, 0xd4, 0x1c, 0x30, 0x5b, 0x88, 0x8f, 0x8b,
	0x29, 0xb3, 0x00, 0x6a, 0x39, 0x53, 0x66, 0x01, 0x48, 0x4d, 0x41, 0x7e, 0x51, 0x89, 0x04, 0xb3,
	0x02, 0xa3, 0x06, 0x6b, 0x10, 0x98, 0xed, 0xc4, 0x1d, 0xc5, 0xa9, 0x67, 0x0d, 0x0d, 0x81, 0x24,
	0x36, 0x70, 0x10, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x6a, 0x6e, 0x63, 0x13, 0x01,
	0x00, 0x00,
}
