// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: rfthermaldiscovery.proto

package rfthermaldiscovery

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Config struct {
	Servers              map[string]*Server     `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IpUrl                string                 `protobuf:"bytes,2,opt,name=ip_url,json=ipUrl,proto3" json:"ip_url,omitempty"`
	AggUrl               string                 `protobuf:"bytes,3,opt,name=agg_url,json=aggUrl,proto3" json:"agg_url,omitempty"`
	PollingInterval      string                 `protobuf:"bytes,4,opt,name=polling_interval,json=pollingInterval,proto3" json:"polling_interval,omitempty"`
	RfThermalThresholds  map[string]*Thresholds `protobuf:"bytes,5,rep,name=rf_thermal_thresholds,json=rfThermalThresholds,proto3" json:"rf_thermal_thresholds,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1f74e80867e017d, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetServers() map[string]*Server {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *Config) GetIpUrl() string {
	if m != nil {
		return m.IpUrl
	}
	return ""
}

func (m *Config) GetAggUrl() string {
	if m != nil {
		return m.AggUrl
	}
	return ""
}

func (m *Config) GetPollingInterval() string {
	if m != nil {
		return m.PollingInterval
	}
	return ""
}

func (m *Config) GetRfThermalThresholds() map[string]*Thresholds {
	if m != nil {
		return m.RfThermalThresholds
	}
	return nil
}

type Server struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	ReqTimeout           int32    `protobuf:"varint,4,opt,name=req_timeout,json=reqTimeout,proto3" json:"req_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Server) Reset()         { *m = Server{} }
func (m *Server) String() string { return proto.CompactTextString(m) }
func (*Server) ProtoMessage()    {}
func (*Server) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1f74e80867e017d, []int{1}
}
func (m *Server) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Server.Unmarshal(m, b)
}
func (m *Server) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Server.Marshal(b, m, deterministic)
}
func (m *Server) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Server.Merge(m, src)
}
func (m *Server) XXX_Size() int {
	return xxx_messageInfo_Server.Size(m)
}
func (m *Server) XXX_DiscardUnknown() {
	xxx_messageInfo_Server.DiscardUnknown(m)
}

var xxx_messageInfo_Server proto.InternalMessageInfo

func (m *Server) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Server) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Server) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *Server) GetReqTimeout() int32 {
	if m != nil {
		return m.ReqTimeout
	}
	return 0
}

type Thresholds struct {
	LowerNormal          int32    `protobuf:"varint,1,opt,name=lower_normal,json=lowerNormal,proto3" json:"lower_normal,omitempty"`
	UpperNormal          int32    `protobuf:"varint,2,opt,name=upper_normal,json=upperNormal,proto3" json:"upper_normal,omitempty"`
	LowerHigh            int32    `protobuf:"varint,3,opt,name=lower_high,json=lowerHigh,proto3" json:"lower_high,omitempty"`
	UpperHigh            int32    `protobuf:"varint,4,opt,name=upper_high,json=upperHigh,proto3" json:"upper_high,omitempty"`
	LowerCritical        int32    `protobuf:"varint,5,opt,name=lower_critical,json=lowerCritical,proto3" json:"lower_critical,omitempty"`
	UpperCritical        int32    `protobuf:"varint,6,opt,name=upper_critical,json=upperCritical,proto3" json:"upper_critical,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Thresholds) Reset()         { *m = Thresholds{} }
func (m *Thresholds) String() string { return proto.CompactTextString(m) }
func (*Thresholds) ProtoMessage()    {}
func (*Thresholds) Descriptor() ([]byte, []int) {
	return fileDescriptor_a1f74e80867e017d, []int{2}
}
func (m *Thresholds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Thresholds.Unmarshal(m, b)
}
func (m *Thresholds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Thresholds.Marshal(b, m, deterministic)
}
func (m *Thresholds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Thresholds.Merge(m, src)
}
func (m *Thresholds) XXX_Size() int {
	return xxx_messageInfo_Thresholds.Size(m)
}
func (m *Thresholds) XXX_DiscardUnknown() {
	xxx_messageInfo_Thresholds.DiscardUnknown(m)
}

var xxx_messageInfo_Thresholds proto.InternalMessageInfo

func (m *Thresholds) GetLowerNormal() int32 {
	if m != nil {
		return m.LowerNormal
	}
	return 0
}

func (m *Thresholds) GetUpperNormal() int32 {
	if m != nil {
		return m.UpperNormal
	}
	return 0
}

func (m *Thresholds) GetLowerHigh() int32 {
	if m != nil {
		return m.LowerHigh
	}
	return 0
}

func (m *Thresholds) GetUpperHigh() int32 {
	if m != nil {
		return m.UpperHigh
	}
	return 0
}

func (m *Thresholds) GetLowerCritical() int32 {
	if m != nil {
		return m.LowerCritical
	}
	return 0
}

func (m *Thresholds) GetUpperCritical() int32 {
	if m != nil {
		return m.UpperCritical
	}
	return 0
}

func init() {
	proto.RegisterType((*Config)(nil), "RFThermalDiscovery.Config")
	proto.RegisterMapType((map[string]*Thresholds)(nil), "RFThermalDiscovery.Config.RfThermalThresholdsEntry")
	proto.RegisterMapType((map[string]*Server)(nil), "RFThermalDiscovery.Config.ServersEntry")
	proto.RegisterType((*Server)(nil), "RFThermalDiscovery.Server")
	proto.RegisterType((*Thresholds)(nil), "RFThermalDiscovery.Thresholds")
}

func init() { proto.RegisterFile("rfthermaldiscovery.proto", fileDescriptor_a1f74e80867e017d) }

var fileDescriptor_a1f74e80867e017d = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x93, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x95, 0x74, 0xc9, 0xd4, 0xd7, 0x31, 0x26, 0xc3, 0x20, 0xaa, 0x04, 0x8c, 0x4a, 0x88,
	0x71, 0x89, 0xd0, 0xc6, 0x01, 0xc1, 0x09, 0x06, 0x08, 0x2e, 0x1c, 0x42, 0xe1, 0xc0, 0x25, 0x32,
	0x9d, 0xe3, 0x58, 0xb8, 0xb1, 0xf7, 0xe2, 0x06, 0xf5, 0xaf, 0xe4, 0x3f, 0xe0, 0x6f, 0x41, 0x79,
	0x76, 0xd7, 0xa2, 0x96, 0xdd, 0xac, 0xef, 0xfb, 0xbd, 0xf7, 0x7d, 0x96, 0x65, 0xc8, 0xb0, 0x72,
	0xb5, 0xc0, 0x39, 0xd7, 0x97, 0xaa, 0x9d, 0x99, 0x4e, 0xe0, 0x32, 0xb7, 0x68, 0x9c, 0x61, 0xac,
	0xf8, 0x30, 0xf5, 0xce, 0xbb, 0x95, 0x33, 0xf9, 0x3d, 0x80, 0xf4, 0xc2, 0x34, 0x95, 0x92, 0xec,
	0x0d, 0xec, 0xb7, 0x02, 0x3b, 0x81, 0x6d, 0x16, 0x9d, 0x0c, 0x4e, 0x47, 0x67, 0x4f, 0xf3, 0xed,
	0x81, 0xdc, 0xc3, 0xf9, 0x17, 0x4f, 0xbe, 0x6f, 0x1c, 0x2e, 0x8b, 0xd5, 0x1c, 0x3b, 0x86, 0x54,
	0xd9, 0x72, 0x81, 0x3a, 0x8b, 0x4f, 0xa2, 0xd3, 0x61, 0x91, 0x28, 0xfb, 0x15, 0x35, 0xbb, 0x0f,
	0xfb, 0x5c, 0x4a, 0xd2, 0x07, 0xa4, 0xa7, 0x5c, 0xca, 0xde, 0x78, 0x06, 0x47, 0xd6, 0x68, 0xad,
	0x1a, 0x59, 0xaa, 0xc6, 0x09, 0xec, 0xb8, 0xce, 0xf6, 0x88, 0xb8, 0x1d, 0xf4, 0x4f, 0x41, 0x66,
	0x12, 0x8e, 0xb1, 0x2a, 0xc3, 0xcd, 0x4a, 0x57, 0xa3, 0x68, 0x6b, 0xa3, 0x2f, 0xdb, 0x2c, 0xa1,
	0xae, 0xe7, 0x37, 0x74, 0x2d, 0xaa, 0xe0, 0x4c, 0xaf, 0xa7, 0x7c, 0xef, 0x3b, 0xb8, 0xed, 0x8c,
	0xbf, 0xc1, 0xc1, 0xe6, 0xe5, 0xd8, 0x11, 0x0c, 0x7e, 0x8a, 0x65, 0x16, 0x51, 0xad, 0xfe, 0xc8,
	0x9e, 0x43, 0xd2, 0x71, 0xbd, 0x10, 0x74, 0xc9, 0xd1, 0xd9, 0x78, 0x57, 0xb4, 0x5f, 0x51, 0x78,
	0xf0, 0x55, 0xfc, 0x32, 0x1a, 0x57, 0x90, 0xfd, 0xaf, 0xc8, 0x8e, 0x8c, 0x17, 0xff, 0x66, 0x3c,
	0xdc, 0x95, 0xb1, 0xde, 0xb2, 0x91, 0x33, 0xe1, 0x90, 0xfa, 0x70, 0xc6, 0x60, 0xaf, 0xe1, 0x73,
	0x11, 0xd6, 0xd2, 0x99, 0x1d, 0x42, 0xac, 0x6c, 0x78, 0x9d, 0x58, 0xd9, 0x9e, 0xb1, 0x06, 0x5d,
	0x78, 0x17, 0x3a, 0xb3, 0x47, 0x30, 0x42, 0x71, 0x55, 0x3a, 0x35, 0x17, 0x66, 0xe1, 0xe8, 0x41,
	0x92, 0x02, 0x50, 0x5c, 0x4d, 0xbd, 0x32, 0xf9, 0x13, 0x01, 0xac, 0xc3, 0xd9, 0x63, 0x38, 0xd0,
	0xe6, 0x97, 0xc0, 0xb2, 0x31, 0x7d, 0x41, 0xca, 0x4b, 0x8a, 0x11, 0x69, 0x9f, 0x49, 0xea, 0x91,
	0x85, 0xb5, 0x6b, 0x24, 0xf6, 0x08, 0x69, 0x01, 0x79, 0x00, 0xe0, 0xb7, 0xd4, 0x4a, 0xd6, 0xd4,
	0x27, 0x29, 0x86, 0xa4, 0x7c, 0x54, 0xb2, 0xee, 0x6d, 0xbf, 0x81, 0x6c, 0xdf, 0x69, 0x48, 0x0a,
	0xd9, 0x4f, 0xe0, 0xd0, 0x4f, 0xcf, 0x50, 0x39, 0x35, 0xe3, 0x3a, 0x4b, 0x08, 0xb9, 0x45, 0xea,
	0x45, 0x10, 0x7b, 0xcc, 0x6f, 0xb9, 0xc6, 0x52, 0x8f, 0x91, 0xba, 0xc2, 0xde, 0xde, 0xfb, 0x7e,
	0x37, 0x7f, 0xbd, 0xfd, 0x8f, 0x7e, 0xa4, 0xf4, 0x91, 0xce, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff,
	0xd9, 0x6d, 0x35, 0x40, 0x64, 0x03, 0x00, 0x00,
}
