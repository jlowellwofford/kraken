// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: websocket.proto

package websocket

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	golang_proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Config struct {
	Port                 int32    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	WriteWait            string   `protobuf:"bytes,3,opt,name=writeWait,proto3" json:"writeWait,omitempty"`
	PongWait             string   `protobuf:"bytes,4,opt,name=pongWait,proto3" json:"pongWait,omitempty"`
	PingPeriod           string   `protobuf:"bytes,5,opt,name=pingPeriod,proto3" json:"pingPeriod,omitempty"`
	MaxMessageSize       int64    `protobuf:"varint,6,opt,name=maxMessageSize,proto3" json:"maxMessageSize,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_928d6fde112007a2, []int{0}
}
func (m *Config) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Config.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return m.Size()
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Config) GetWriteWait() string {
	if m != nil {
		return m.WriteWait
	}
	return ""
}

func (m *Config) GetPongWait() string {
	if m != nil {
		return m.PongWait
	}
	return ""
}

func (m *Config) GetPingPeriod() string {
	if m != nil {
		return m.PingPeriod
	}
	return ""
}

func (m *Config) GetMaxMessageSize() int64 {
	if m != nil {
		return m.MaxMessageSize
	}
	return 0
}

func (*Config) XXX_MessageName() string {
	return "WebSocket.Config"
}
func init() {
	proto.RegisterType((*Config)(nil), "WebSocket.Config")
	golang_proto.RegisterType((*Config)(nil), "WebSocket.Config")
}

func init() { proto.RegisterFile("websocket.proto", fileDescriptor_928d6fde112007a2) }
func init() { golang_proto.RegisterFile("websocket.proto", fileDescriptor_928d6fde112007a2) }

var fileDescriptor_928d6fde112007a2 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4f, 0x4d, 0x2a,
	0xce, 0x4f, 0xce, 0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x0c, 0x4f, 0x4d,
	0x0a, 0x06, 0x0b, 0x48, 0xe9, 0xa6, 0x67, 0x96, 0x64, 0x94, 0x26, 0xe9, 0x25, 0xe7, 0xe7, 0xea,
	0xa7, 0xe7, 0xa7, 0xe7, 0xeb, 0x83, 0x55, 0x24, 0x95, 0xa6, 0x81, 0x79, 0x60, 0x0e, 0x98, 0x05,
	0xd1, 0xa9, 0x34, 0x8f, 0x91, 0x8b, 0xcd, 0x39, 0x3f, 0x2f, 0x2d, 0x33, 0x5d, 0x48, 0x88, 0x8b,
	0xa5, 0x20, 0xbf, 0xa8, 0x44, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x08, 0xcc, 0x16, 0x92, 0xe1,
	0xe2, 0x2c, 0x2f, 0xca, 0x2c, 0x49, 0x0d, 0x4f, 0xcc, 0x2c, 0x91, 0x60, 0x56, 0x60, 0xd4, 0xe0,
	0x0c, 0x42, 0x08, 0x08, 0x49, 0x71, 0x71, 0x14, 0xe4, 0xe7, 0xa5, 0x83, 0x25, 0x59, 0xc0, 0x92,
	0x70, 0xbe, 0x90, 0x1c, 0x17, 0x57, 0x41, 0x66, 0x5e, 0x7a, 0x40, 0x6a, 0x51, 0x66, 0x7e, 0x8a,
	0x04, 0x2b, 0x58, 0x16, 0x49, 0x44, 0x48, 0x8d, 0x8b, 0x2f, 0x37, 0xb1, 0xc2, 0x37, 0xb5, 0xb8,
	0x38, 0x31, 0x3d, 0x35, 0x38, 0xb3, 0x2a, 0x55, 0x82, 0x4d, 0x81, 0x51, 0x83, 0x39, 0x08, 0x4d,
	0xd4, 0x49, 0xf1, 0xc4, 0x23, 0x39, 0xc6, 0x0b, 0x8f, 0xe4, 0x18, 0x1f, 0x3c, 0x92, 0x63, 0x3c,
	0xf0, 0x58, 0x8e, 0xf1, 0xc4, 0x63, 0x39, 0xc6, 0x28, 0x6e, 0x3d, 0x6b, 0x78, 0x18, 0x24, 0xb1,
	0x81, 0xbd, 0x62, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x37, 0x12, 0x1c, 0x17, 0x01, 0x00,
	0x00,
}

func (m *Config) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Config) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Config) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MaxMessageSize != 0 {
		i = encodeVarintWebsocket(dAtA, i, uint64(m.MaxMessageSize))
		i--
		dAtA[i] = 0x30
	}
	if len(m.PingPeriod) > 0 {
		i -= len(m.PingPeriod)
		copy(dAtA[i:], m.PingPeriod)
		i = encodeVarintWebsocket(dAtA, i, uint64(len(m.PingPeriod)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.PongWait) > 0 {
		i -= len(m.PongWait)
		copy(dAtA[i:], m.PongWait)
		i = encodeVarintWebsocket(dAtA, i, uint64(len(m.PongWait)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.WriteWait) > 0 {
		i -= len(m.WriteWait)
		copy(dAtA[i:], m.WriteWait)
		i = encodeVarintWebsocket(dAtA, i, uint64(len(m.WriteWait)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Port != 0 {
		i = encodeVarintWebsocket(dAtA, i, uint64(m.Port))
		i--
		dAtA[i] = 0x10
	}
	return len(dAtA) - i, nil
}

func encodeVarintWebsocket(dAtA []byte, offset int, v uint64) int {
	offset -= sovWebsocket(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Config) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Port != 0 {
		n += 1 + sovWebsocket(uint64(m.Port))
	}
	l = len(m.WriteWait)
	if l > 0 {
		n += 1 + l + sovWebsocket(uint64(l))
	}
	l = len(m.PongWait)
	if l > 0 {
		n += 1 + l + sovWebsocket(uint64(l))
	}
	l = len(m.PingPeriod)
	if l > 0 {
		n += 1 + l + sovWebsocket(uint64(l))
	}
	if m.MaxMessageSize != 0 {
		n += 1 + sovWebsocket(uint64(m.MaxMessageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovWebsocket(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozWebsocket(x uint64) (n int) {
	return sovWebsocket(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Config) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowWebsocket
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Config: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Config: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Port", wireType)
			}
			m.Port = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Port |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WriteWait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWebsocket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWebsocket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WriteWait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PongWait", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWebsocket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWebsocket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PongWait = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PingPeriod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthWebsocket
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthWebsocket
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PingPeriod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MaxMessageSize", wireType)
			}
			m.MaxMessageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MaxMessageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipWebsocket(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthWebsocket
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipWebsocket(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowWebsocket
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowWebsocket
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthWebsocket
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupWebsocket
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthWebsocket
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthWebsocket        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowWebsocket          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupWebsocket = fmt.Errorf("proto: unexpected end of group")
)
